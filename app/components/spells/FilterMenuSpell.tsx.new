'use client'

import * as React from 'react'

type MenuItem = {
  id: string
  label: string
  onClick: () => void
}

type Props = {
  spellId: string
  onManualSelectAction: () => void
  onFilterUpdateAction: (filters: any) => void
  activationTrigger: React.ReactNode
}

export default function FilterMenuSpell(props: Props) {
  const [pos, setPos] = React.useState<{x: number, y: number} | null>(null)
  const [showChat, setShowChat] = React.useState(false)
  const ref = React.useRef<HTMLDivElement>(null)

  const handleClick = (e: React.MouseEvent) => {
    const rect = ref.current?.getBoundingClientRect()
    if (rect) {
      setPos({
        x: rect.left,
        y: rect.bottom + 5,
      })
    }
  }

  const handleOptionSelect = (option: string) => {
    setPos(null)
    if (option === 'manual') {
      props.onManualSelectAction()
    } else if (option === 'chat') {
      setShowChat(true)
    }
  }

  const items: MenuItem[] = [
    {
      id: 'manual',
      label: 'Manual Filter Selection',
      onClick: () => handleOptionSelect('manual')
    },
    {
      id: 'chat',
      label: 'Chat Filter Selection',
      onClick: () => handleOptionSelect('chat')
    }
  ]

  return (
    <div>
      <div ref={ref} onClick={handleClick}>
        {props.activationTrigger}
      </div>
      {pos && (
        <div
          style={{
            position: 'absolute',
            top: pos.y,
            left: pos.x,
            background: 'white',
            borderRadius: '4px',
            padding: '8px',
            boxShadow: '0 2px 10px rgba(0,0,0,0.1)'
          }}
        >
          {items.map(item => (
            <button
              key={item.id}
              onClick={item.onClick}
              style={{
                display: 'block',
                width: '100%',
                padding: '8px',
                background: 'none',
                border: 'none',
                textAlign: 'left',
                cursor: 'pointer'
              }}
            >
              {item.label}
            </button>
          ))}
        </div>
      )}
      {showChat && (
        <div
          style={{
            position: 'fixed',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            background: 'white',
            padding: '20px',
            borderRadius: '8px',
            boxShadow: '0 2px 20px rgba(0,0,0,0.2)'
          }}
        >
          <div style={{ marginBottom: '16px' }}>
            <button
              onClick={() => setShowChat(false)}
              style={{
                position: 'absolute',
                top: '12px',
                right: '12px',
                background: 'none',
                border: 'none',
                cursor: 'pointer'
              }}
            >
              Ã—
            </button>
            <h3 style={{ margin: '0 0 16px' }}>Filter by Chat</h3>
            <p>Coming soon...</p>
          </div>
        </div>
      )}
    </div>
  )
}